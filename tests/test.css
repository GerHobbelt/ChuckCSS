/*
    * SETTINGS.LESS
    ~ Configuration file

    * HOW TO UNDERSTAND VAR NAMES ?
        "-mc" : main-color
        "-bg" : background-color
        "-bc" : border-color
        "-tc" : text-color
        "-ic" : icon color
        "-su" : success
        "-er" : error
        "-wa" : warning
        "-in" : info
        "-he" : height
        "-lh" : line-height
        "-br" : border-radius
        "-fs" : font-size (fonts only)
        "-li" : light (colors only)
        "-da" : dark (colors only)
        "-na" : name (colors only)
        "-mw" : max-width (media queries)
        "-pa" : padding (for grid columns, and helpers paddings and margins)
        "-ma" : margin (for grid containers, and helpers paddings and margins)
*/
/* ********* */
/* VARIABLES */
/* ********* */
/*
    -- @ Media Queries @ --
*/
/* Max-width for phone devices */
/* Max-width for tablet devices */
/*
    -- @ Colors @ --
*/
/* Primary color */
/* Name of the color, for @aColors array */
/* Lighten primary */
/* Lighten primary */
/* Name of the color, for @aColors array */
/* Lighten green */
/* Darken green */
/* Name of the color, for @aColors array */
/* Lighten red */
/* Darken red */
/* Name of the color, for @aColors array */
/* Lighten gray */
/* Darken gray */
/* Name of the color, for @aColors array */
/* Lighten blue */
/* Darken blue */
/* Name of the color, for @aColors array */
/* Lighten purple */
/* Darken purple */
/* Name of the color, for @aColors array */
/* Lighten orange */
/* Darken orange */
/* Name of the color, for @aColors array */
/* Lighten yellow */
/* Darken yellow */
/*
    -- @ Texts @ --
*/
/* Texts ~ Main color (hexa, rgb, rgba...) */
/* Texts font-size ~ Used for old browsers that doesn't support rem units */
/* Textes font-size (applied to <body>) */
/* Texts line-height : ~= font-size*1.5 */
/*
    -- @ Links @ --
    * HTML
        <a href="#" class="btn">My button link</a>
        <button class="btn">My button</button>
*/
/* Links ~ Text color */
/* Links ~ Font-size */
/* Links ~ buttons text color when colorized */
/* Links ~ buttons text color on hover when colorized */
/* Links ~ buttons line-height : ~= font-size*1.8 */
/* Links ~ buttons border-radius (in px) */
/* <a class="btn cc-thin"> font-size */
/* <a class="btn cc-fat"> font-size */
/*
    -- @ Titles @ --
    * HTML
        <Hn>My Heading title</Hn>
*/
/* Hn ~ Titles main color */
/* Subtitle font-color */
/* Subtitle font-color */
/*
    -- @ Tables @ --
    * HTML
        <table class="hover colored"> // exemple
            <thead>
                <tr>
                    <th>My Head lind</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Lorem Ipsum</td>
                </tr>
            </tbody>
        </table>
*/
/* <th> & <td> padding */
/* Line below tables */
/* Even lines bg-color */
/* Odd lines bg-color */
/* Hovered lines bg-color (only for table.hovered) */
/* <thead><th> main color */
/*
    -- @ Forms @ --
    * HTML
        Read all exemples in elements/forms.less file
*/
/* Primary color for forms elements */
/* Input ~ bg-color */
/* Input ~ font-size = @text-fs (can be changed by custom value) */
/* Input ~ line-height (Submit buttons too) */
/* Input border-color */
/* Input ~ border-radius (in px) */
/* Submit input/button bg-color */
/* Prefix bgColor */
/* Prefix padding */
/* Prefix text color */
/* Suffix bgColor */
/* Suffix padding */
/* Suffix text color */
/*
    -- @ Alerts @ --
    * HTML
        <div class="alert alert-error">...</div>
        <div class="alert alert-success">...</div>
*/
/* Alerts border-radius (pixel)
/* success */
/* error */
/* warning */
/* info */
/*
    -- @ Blockquotes @ --
    * HTML
        <blockquote class="quoted">
            <p>A odio tristique cum aliquam, integer? Etiam. A odio tristique cum aliquam, integer? Etiam. A odio tristique cum aliquam, integer? Etiam.A odio tristique cum aliquam, integer? Etiam.</p>
            <footer>
                Someone famous in <cite title="Les hackis pour la vie">Les hackis pour la vie</cite>
            </footer>
        </blockquote>
*/
/* Blockquote ~ border-left color */
/* Blockquote ~ FontAwesome icon color (only for <blockquote.quoted>) */
/* Blockquote ~ footer text-color */
/*
    -- @ Grids @ --
    * HTML
        <div class="columns">
            <div class="column cc-6">6 columns</div>
            <div class="column cc-6">6 columns</div>
        </div>
*/
/* Gutter between 2 cols = Each column margin-left & margin-right */
/* Total of cols in grid */
/* Each column padding  */
/* Each column margin top */
/* Each column margin bottom */
/* Gap between each column with masonry layout */
/*
    -- @ Helpers @ --
*/
/* Used for helpers cc-pa */
/* Used for helpers cc-pat */
/* Used for helpers cc-par */
/* Used for helpers cc-pab */
/* Used for helpers cc-pal */
/* Used for helpers cc-ma */
/* Used for helpers cc-mat */
/* Used for helpers cc-mar */
/* Used for helpers cc-mab */
/* Used for helpers cc-mal */
/*
    -- @ Loader @ --
*/
/* Background-color of each dot */
/* Number of dots */
/* Calculation of each dot radius */
/* Calculation of each dot delay-animation */
/* Claculation of each dot animation delay */
/*
    -- @ FONTS MIXINS @ --
    "Here define the fonts"

    * LESS call
        .font(){font-family:'My font',sans-serif;}
*/
/*
    -- @ Images @ --
    NOTE : This var is not used in ChuckCSS but is usefull for front-end developments
*/
/* Path of images files */
/*
    -- @ FONTS PATH @ --
    "Here define the 'fonts' folder path"
    NOTE : This var is not used in ChuckCSS but is usefull for front-end developments
*/
/* Path of fonts files */
/*
    == FUNCTIONS / MIXINS ==
*/
/*
** Functions/mixins list **
    ._tablet, ._phone, etc...
    ._border-radius
    ._box-shadow
    ._bg-vertical | ._bg-horizontal
    ._opacity
    ._clearfix
    ._displayTable
    ._inline
    ._inside
    ._transition
    ._transform
    ._rotate | ._scale | ._translate3d | ._skew
    ._box-sizing
    ._filter (grayscale, blur, sepia, etc..) | all CSS3 "filter" properties
    ._placeHold
    ._reset
    ._uppercase
    ._fa
    ._io
    ._cover
    ._truncate
    ._btn
*/
/* *****
    @name : ._tablet, ._phone and others media queries
    @description : A way for responsive integration. Apply rules for media queries tablet, phone, ...
    @params : @rules (CSS rules)

    @exemple :
      el {
        background-color:white; // Default : Apply a white bg-color to the <el>

        ._tablet({
          background-color:black; // Apply a black bg-color to the <el> on max-width:@tablet-mw screens <= @tablet-mw defined in settings.less
        }); // don't forget the ;

        ._phone({
          background-color:red; // Apply a red bg-color to the <el> on max-width:@phone-mw screens <= @phone-mw defined in settings.less
        }); // don't forget the ;
      }

***** */
/* *****
    @name : ._border-radius
    @description : apply the border-radius property to a DOM element
    @params : @radius (pixels)

    @exemple :
      el {
        ._border-radius(5px 0 0 5px); // Will apply a border-radius:5px 0 0 5px to <el>
      }
***** */
/* *****
    @name : ._box-shadow
    @description : apply the box-shadow property to a DOM element
    @values : string (see exemples below)

    @exemples :
      el {
        ._box-shadow('1px 1px 5px 0px rgba(0,0,0,0.5) inset, 1px 1px 5px 0px rgba(0,0,0,0.5)'); //  Multi-values
        ._box-shadow('1px 1px 5px 0px rgba(0,0,0,0.5) inset'); //  Single Value
        ._box-shadow('none'); //  Reset value
      }
***** */
/* *****
    @name : background-gradient : horizontal || vertical
    @description : apply a grandient background color to a DOM element
    @params : @from (rgba or HEXA code), @to (rgba or HEXA code)

    NOTICE : For others background-gradients (diagonal, radial, transparent, etc...), please use the generator.
    @Generator : http://www.colorzilla.com/gradient-editor/
***** */
/* *****
    @name : ._opacity
    @description : apply the opacity property to a DOM element
    @params : @opacity (0-1)

    @exemple :
      el {
        ._opacity(0.5); // Apply a half-opacity (0.5) to <el>
      }
***** */
/* *****
    @name : ._clearfix
    @description : reset floated elements
***** */
/* *****
    @name : ._displayTable
    @description : Show elements as Table view

    @exemple :
      el {
          ._displayTable; // <el> is now shown as a table element. All direct children will have a table-cell display
      }
***** */
/* *****
    @name : ._inline
    @description : Set the element display as an inline-block element with IE7 fix
    @wtf : why called it "._inline" to apply "inline-block" property ? Because ._inline-block is too long ... ¯\_(ツ)_/¯

    @exemple :
      p {
          ._inline; // <p>, a block element is now shown as an inline-block element
      }
***** */
/* *****
    @name : ._inside
    @description : Auto-center a DOM element with specific width (very usefull for responsive integration)
    @params : @width

    @exemple :
      el {
        ._inside; // <el> is now horizontaly centered in the page, with responsive behavior
      }
***** */
/* *****
    @name : ._transition
    @description : animate a DOM element with transition property
    @params : @duration (0 - ∞ seconds), @property (all or css rules), @effect (easing effects or Cubic-bezier curve), @delay (0 - ∞ seconds)
    @Generator for custom & cool Cubic-Bezier effects : http://cubic-bezier.com/

    @exemple :
      a {
        .opacity(0.5); // Default, apply a half-opacity to <a>
        ._transition; // Animate <a> on hover (all CSS properties)
        ._transition(0.4, opacity); // Animate only opacity on hover with a duration of 0.4s

        &:hover {
          background-color:red;
          ._opacity(1); // Animate opacity with smoothy animation
        }
      }
***** */
/* *****
    @name : ._transform
    @description : Apply transform property to a DOM element
    @params : CSS3 transform effects : you can pass a 2D or 3D transform function in parameters : ._rotate, ._scale, ._translate, ._skew

    NOTICE : You can call multi-times 2D or 3D transform function

    @exemple :
      el {
        ._skew('',10deg,10deg);
        ._rotate(45deg);
      }

    will compile to
    el {
        transform: skew(10deg, 10deg) rotate(45deg);
    }
***** */
/* *****
    @exemples :
      el {
        ._rotate(5deg); // Default, <el> has a 5deg rotation when displayed.

        ._rotate(-10deg, 'X'); // Apply a -10deg rotation on X axis only

        ._rotate(-10deg, 'X', 200); // Apply a -10deg rotation on X axis only with a 200 perspective
      }
***** */
/* *****
    @exemples :
      el {
        ._scale; // Default, <el> is scaled 1.2

        ._scale(0.8); // Only one value = <el> is scaled X & Y (0.8)

        ._scale(.8, 1.3); // Two values = <el> is scaled 0.8 on X axis & 1.3 on Y axis
      }
***** */
/* *****
    @exemples :
      el {
        ._translate; // Default, <el> is translated to 10px on X, Y & Z axis

        ._translate(5px); // Default, <el> is translated to 5px on X, Y & Z axis

        ._translate(15px, 5px, 0px); // Default, <el> is translated to 15px on X axis, 5px on Y axis, 0px on Z axis
      }
***** */
/* *****
    @exemples :
      el {
        ._skew; // Non-sens :/ Params are required

        ._skew('X', 10deg); // <el> is skewed to 10deg on X axis

        ._skew('X', 10deg, 5deg); // <el> is skewed to 10deg on X axis & 5deg to Y axis
      }
***** */
/* *****
    @name : ._box-sizing
    @description : apply box-sizing property to a DOM element
    @params : @boxmodel (content-box | border-box | inherit);

    @exemple :
      el {
          ._box-sizing(border-box);
      }
***** */
/* *****
    @name : ._filter
    @params : all CSS3 filters : blur, grayscale, drop-shadow, sepia, brightness, constrast, invert...
    @full exemples : http://html5-demos.appspot.com/static/css/filters/index.html

    NOTICE : You can call multi-times filters funtions

    @exemple :
      el {
        // The 2 lines below...
        ._filter(blur(1px)); // Apply blur effect
        ._filter(sepia(1)); // Apply sepia effect

        // ...are the same as
        ._filter(blur(1px) sepia(1)); // Apply blur and sepia effects
      }

      will compile to :
      el {
          filter: blur(1px) sepia(1);
      }
***** */
/* *****
    @name : ._placeHold
    @description : Replace non-images by real images during frontend development
    @params : @w & @h (image width & height)

    @exemple :
      img {
        ._placeHold(150, 150); // This <img /> will be replaced by an image with sizes 150px*150px from placehold.it or lorempixel.it. Usefull for integration works
      }
***** */
/* *****
    @name : ._reset
    @description : reset margin, border & padding properties in one function

    @exemple :
      el {
        ._reset; // Let be safe that <el> has no border, no padding, mo margin
      }
***** */
/* *****
    @name : ._uppercase
    @description : set string to uppercase
    @wtf : just because it's boring to write the whole property
***** */
/* *****
    @name : ._fa
    @description : Generate fontAwesome icon
    @params : @content (unicode from FontAwesome : i.e. '\f0d0'), @size (px, pt, etc...), @color (rgba, hexa)
    @link : All icons at http://fortawesome.github.io/Font-Awesome/icons/

    @exemple :
      el:before {
        ._fa('\f00c'); // An icon "fa-check" from FontAwesome will be displayed in the el:before element
      }
***** */
/* *****
    @name : ._io
    @description : Generate Ionicons icon
    @params : @content (unicode from Ionicon i.e. '\f0d0'), @size (px, pt, etc...), @color (rgba, hexa)
    @link : All icons at http://ionicons.com/cheatsheet.html

     @exemple :
      el:before {
        ._io('\f101'); // The icon "ion-alter" from Ionicons will be displayed in the el:before element
      }
***** */
/* *****
    @name : ._cover
    @description : display background-image as cover css3 property

    @exemple :
      el {
        background-image : url('path_to_image/img.jpg');
        ._cover;
      }
***** */
/* *****
    @name : ._truncate
    @description : add ellipsis to an element with specifid width;
    @params : @width (pixels)

    @exemple :
      el {
        ._truncate(200px); // <el> will be truncate at 200px
      }
***** */
/* *****
    @name : ._btn
    @description : generate btn links with unlimited background colors
    @params : @bg (button color (rgba, hexa)), @bgHover (button hover color (rgba, hexa))

    @exemple :
      button {
        // 2 colors
        ._btn(@red, @green); // <button> will be displayed with a red bg-color, and a green bg-color on hover (with smoothy animation)

        // 1 color
        ._btn(@red); // <button> will be displayed with a red bg-color, and a darken (10%) red bg-color on hover (with smoothy animation)
      }
***** */
body.test {
  background-color: #f8f8f8;
  padding: 50px;
  background-image: url('http://www.hdwallpapers.in/walls/hdtv_vector_designs-HD.jpg');
  background-size: cover;
  /* Standard */
  background-repeat: no-repeat;
  background-position: center center;
  background-attachment: fixed;
  background-size: 100% 100%\9;
  /* <= IE8 */
  background-position: center top\9;
  /* <= IE8 */
}
@media screen and (max-width: 767px) {
  body.test {
    font-size: 1.3rem;
  }
}
body.test > section {
  border: 1px solid #eeeeee;
  background-color: white;
  padding: 30px;
  margin-bottom: 50px;
  box-shadow: 0px 2px 1px 0px rgba(0,0,0,0.2);
  /* header */
  /* content */
}
body.test > section header {
  position: relative;
  overflow: hidden;
}
body.test > section header .title {
  text-align: center;
}
body.test > section header .description {
  border-bottom: 1px dashed #cecece;
  color: #a1a1a1;
  padding: 10px 0;
  text-align: center;
}
body.test > section header .description strong {
  color: #29b7e1;
}
body.test > section header .description .btn.active {
  background-color: #196090;
  border-color: #196090;
}
body.test > section .main {
  padding: 30px 0;
  display: none;
  /* Specific for buttons */
}
body.test > section .main.active {
  display: block;
}
body.test > section .main .title {
  font-weight: 600;
  color: #217dbb;
  padding-bottom: 10px;
  border-bottom: 2px solid #217dbb;
  margin: 50px 0 20px;
}
body.test > section .main pre {
  outline: 3px dashed #272727;
  margin-top: 30px;
}
body.test > section .main.cc-buttons p {
  margin: 1em 0 2em;
}
body.test > section .main .columns {
  margin-bottom: 20px;
}
body.test > section.tests p {
  background-color: black;
  color: white;
}
@media screen and (max-width: 767px) {
  body.test {
    padding: 0;
  }
  body.test > section {
    width: 95%;
    margin: 0 auto 40px;
  }
}
.columns .cc-primary {
  background-color: #29b7e1;
  color: white;
}
.columns .cc-green {
  background-color: #80ae37;
  color: white;
}
.columns .cc-red {
  background-color: #c41515;
  color: white;
}
.columns .cc-blue {
  background-color: #3498db;
  color: white;
}
.columns .cc-purple {
  background-color: #8e44ad;
  color: white;
}
.columns .cc-orange {
  background-color: #f39c12;
  color: white;
}
.columns .cc-yellow {
  background-color: #f1c40f;
  color: white;
}
/*
==============================================
alpixel animation
  * "X" of ALPIXEL on footer
==============================================
*/
@keyframes alpixel {
  0% {
    transform: translate3d(0, 0, 0) scaleY(1);
  }
  60% {
    transform: translate3d(0, -50%, 0) scaleY(1.1);
  }
  70% {
    transform: translate3d(0, 0, 0) scaleY(0.95) scaleX(1.05);
  }
  80% {
    transform: translate3d(0, 0, 0) scaleY(1.05) scaleX(1);
  }
  90% {
    transform: translate3d(0, 0, 0) scaleY(0.95) scaleX(1);
  }
  100% {
    transform: translate3d(0, 0, 0) scaleY(1) scaleX(1);
  }
}
